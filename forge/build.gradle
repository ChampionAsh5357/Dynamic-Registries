// Add plugins for ForgeGradle
plugins {
    id 'library-conventions'
    id 'net.minecraftforge.gradle' version '5.+'
    id 'com.github.johnrengelman.shadow' version '5.2.0'
}

// Set project information
classifier.id = ''
classifier.implVersion = "$project.forgeMinecraftVersion-$project.projectVersion"

// Include resources generated by data generators
sourceSets {
    generated {}
    main.resources {
        srcDir 'src/generated/resources'
    }
}

minecraft {
    // The mappings can be changed at any time, and must be in the following format:
    // Channel:   Version:
    // snapshot   YYYYMMDD   Snapshot are built nightly
    // stable     #          Stables are built at the discretion of the MCP team
    // official   MCVersion  Official field/method names from Mojang mapping files
    //
    // You must be aware of the Mojang license when using the 'official' mappings
    // See more information here: https://github.com/MinecraftForge/MCPConfig/blob/master/Mojang.md
    //
    // Use non-defaultW mappings at your own risk. they may not always work
    // Simply re-run your setup task after changing the mappings to update your workspace
    mappings channel: project.forgeMappingChannel, version: project.forgeMappingVerison
    
    // Default run configurations
    // These can be tweaked, removed, or duplicated as needed
    runs {
        // Client run configuration
        client {
            // Directory for the project to run in
            workingDirectory file('run/client')

            // Rename task to be unique
            taskName 'runForgeClient'

            // Set the console logging level
            property 'forge.logging.console.level', 'debug'

            // Attach the sources to the run
            mods.create(project.projectBaseName).source(sourceSets.main)
        }

        // Server run configuration
        server {
            workingDirectory file('run/server')
            taskName 'runForgeServer'
            property 'forge.logging.console.level', 'debug'
            mods.create(project.projectBaseName).source(sourceSets.main)
        }


        // Data run configuration
        data {
            workingDirectory file('run/data')
            taskName 'runForgeData'
            property 'forge.logging.console.level', 'debug'

            // Specify the modid for data generation, where to output the resulting resource, and where to look for existing resources
            args '--mod', project.projectBaseName,
                '--all',
                '--output', sourceSets.generated.resources.srcDirs[0],
                '--existing', sourceSets.main.resources.srcDirs[0]

            mods.create(project.projectBaseName).source(sourceSets.main)
        }
    }
}

// Add shading ability
configurations {
    shade
}

// Include MinecraftForge as a dependency
dependencies {
    minecraft group: 'net.minecraftforge', name: 'forge', version: "$project.forgeMinecraftVersion-$project.forgeApiVersion"
}

// Add shadow jar information
shadowJar {
    archiveClassifier = ''
    configurations = [project.configurations.shade]
}

jar {
    // Reobfuscate the jar file to be used in production
    finalizedBy 'reobfJar'
}

// Set specific publication data
publishing {
    publications.create(archivesBaseName, MavenPublication) {
        artifact shadowJar
        pom {
            name = "$project.projectName"
            description = "An implementation of dynamic registries based of the MinecraftForge registry system"
        }
    }
}
